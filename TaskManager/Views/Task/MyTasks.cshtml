
@model List<TaskManager.Models.ViewModels.TaskViewModel>

@{
    ViewBag.Title = "My Tasks";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">@ViewBag.Title</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
              <div class="btn-group mr-2">
                  <a asp-controller="Task" asp-action="AddNewTask">
                      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-plus-circle"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="16"></line><line x1="8" y1="12" x2="16" y2="12"></line></svg>
                  </a>
              </div>
    </div>
</div>

 @using (Html.BeginForm("MarkCompleted", "Task", FormMethod.Post, new { @class="form-signin"}))
 {
    <button type="Submit" class="btn btn-secondary mb-3 float-right">Mark As Completed</button>

    for (var i = 0; i < Model.Count(); i++)
    {
     @Html.HiddenFor(x => x[i].Id)
     @Html.HiddenFor(x => x[i].Description)
     @Html.HiddenFor(x => x[i].Name)
     @Html.HiddenFor(x => x[i].Priority)
     @Html.HiddenFor(x => x[i].UserId)

        <ul class="list-group">

        @if (@Model[i].IsCompleted == true)
        {
        <li class="list-group-item d-flex gap-3 py-3 mb-3 completed">
            @Model[i].Name 
        </li>
        }
        else {
        <li class="list-group-item d-flex gap-3 py-3 mb-3">
            @Model[i].Name 
            @Html.CheckBoxFor(model => model[i].IsCompleted)
        </li>
        }
       
    </ul>
}
}


